# Workflow to create a new release PR, with one of the following two scenarios:
#
# - Major or minor release, where `inputs.release-type` = `release`
#   - Pushes a new `release/<prefix>-v<version>` branch based on latest `dev`
#   - Creates a new `version-bump` branch from the release, then bumps the version with the `version` input
#   - Opens a release PR from `version-bump` to `release/<prefix>-v<version>`
# - Patch release, where `inputs.release-type` = `patch`
#   - Pushes a new `patch/<prefix>-v<version>` branch based on `release/<prefix>-v<version>`, then bumps the verision with the `version` input
#   - Errors if the `release/<prefix>-v<version>` branch doesn't exist
#   - Opens a release PR from `patch/<prefix>-v<version>` to `release/<prefix>-v<version>`
#
# When the PR is merged, the caller can then trigger a release from `ci-workflows/actions/tag-release`
# The PR branch can then be safely deleted, while the release branch should have a branch protection rule for historical preservation
name: Bump Version
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Semver release type - "release" = major/minor version, "hotfix" = patch version'
        required: true
        default: 'release'
        type: choice
        options:
          - release
          - hotfix
      version:
        description: 'Version, e.g. "1.0.0" for "release" and "1.0.1" for "hotfix"'
        required: true
        type: string
      more-crates:
        description: 'Additional non-workspace crate paths to release'
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Git config
        run: |
          git config --global user.name "argument-ci[bot]"
          git config --global user.email "argument-ci[bot]@users.noreply.github.com"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/checkout@v4
        with:
          repository: argumentcomputer/ci-workflows
          path: ci-workflows
          ref: release-workflow
     # - uses: tibdex/github-app-token@v2
     #   id: generate-token
     #   with:
     #     app_id: ${{ secrets.TOKEN_APP_ID }}
     #     private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}
      - name: Open release PR
        uses: ./ci-workflows/.github/actions/release-pr
        with:
          prefix: sphinx
          more-crates: ${{ inputs.more-crates }}
          release-type: ${{ inputs.release-type }}
          version: ${{ inputs.version }}
          token: ${{ secrets.REPO_TOKEN }}
